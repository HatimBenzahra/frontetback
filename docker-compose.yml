version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: prospec_postgres
    environment:
      POSTGRES_DB: prospec_db
      POSTGRES_USER: prospec_user
      POSTGRES_PASSWORD: prospec_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - prospec_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prospec_user -d prospec_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Backend NestJS avec SSL et service audio streaming intégré
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: prospec_backend
    environment:
      # Base de données
      DATABASE_URL: postgresql://prospec_user:prospec_password@postgres:5432/prospec_db
      
      # Configuration serveur
      NODE_ENV: production
      API_PORT: 3000
      
      # Configuration réseau
      SERVER_HOST: 0.0.0.0
      CLIENT_HOST: prospec_frontend
      FRONTEND_PORT: 5173
      
      # Service audio streaming intégré
      AUDIO_STREAMING_PORT: 3000
      AUDIO_STREAMING_NAMESPACE: /audio-streaming
      
      # SSL
      SSL_CERT_PATH: ssl/cert.pem
      SSL_KEY_PATH: ssl/key.pem
      
      # Sécurité
      JWT_SECRET: ${JWT_SECRET:-your_secure_jwt_secret_here}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./ssl:/app/ssl:ro
    networks:
      - prospec_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:3000/audio-streaming/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend React/Vite
  frontend:
    build:
      context: ./moduleProspec-1dc4f634c6c14f0913f8052d2523c56f04d7738b
      dockerfile: Dockerfile
    container_name: prospec_frontend
    environment:
      # API Backend
      VITE_API_URL: https://prospec_backend:3000
      
      # Configuration réseau
      VITE_SERVER_HOST: prospec_backend
      VITE_CLIENT_HOST: prospec_backend
      VITE_API_PORT: 3000
      VITE_FRONTEND_PORT: 5173
      
      # Service audio streaming intégré
      VITE_AUDIO_STREAMING_URL: https://prospec_backend:3000/audio-streaming
      VITE_AUDIO_STREAMING_NAMESPACE: /audio-streaming
      
      # Clés API
      VITE_MAPBOX_ACCESS_TOKEN: ${MAPBOX_TOKEN:-pk.eyJ1IjoiYmVuemFocmEiLCJhIjoiY21heG85dnd0MDBjbTJuc2RhbWhhOWxsMyJ9.XZm932vHWSs-cHO9lmtmKg}
      VITE_DEEPGRAM_API_KEY: ${DEEPGRAM_API_KEY:-7189f2a24e42949bf3a561b9a89328de00526605}
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./moduleProspec-1dc4f634c6c14f0913f8052d2523c56f04d7738b:/app
      - /app/node_modules
    networks:
      - prospec_network
    restart: unless-stopped

  # Nginx reverse proxy avec SSL
  nginx:
    image: nginx:alpine
    container_name: prospec_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - prospec_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  prospec_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
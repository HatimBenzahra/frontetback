import { Injectable, OnModuleInit } from '@nestjs/common';
import { Server } from 'socket.io';

@Injectable()
export class EventEmitterService implements OnModuleInit {
  private io: Server;

  onModuleInit() {
    // Cette m√©thode sera appel√©e quand le module est initialis√©
    // Nous r√©cup√©rerons l'instance du serveur IO depuis le module principal
  }

  setIoServer(io: Server) {
    this.io = io;
  }

  emitToRoom(room: string, event: string, data: any) {
    if (this.io) {
      this.io.to(room).emit(event, data);
      console.log(`üì° √âv√©nement ${event} √©mis vers la room ${room}`);
    } else {
      console.warn(`‚ö†Ô∏è Serveur IO non disponible pour √©mettre l'√©v√©nement ${event}`);
    }
  }

  emitToAll(event: string, data: any) {
    if (this.io) {
      this.io.emit(event, data);
      console.log(`üì° √âv√©nement ${event} √©mis vers tous les clients`);
    } else {
      console.warn(`‚ö†Ô∏è Serveur IO non disponible pour √©mettre l'√©v√©nement ${event}`);
    }
  }
}
